pipeline{
node{

    //Cloinig the repository and Git checkout
    stage("Git CheckOut"){
        git url: 'https://github.com/Shareefmj/spring-boot-mongo-docker.git',branch: 'master'
    }
    
    //Definig the maven home path and version
    stage(" Maven Clean Package"){
      def mavenHome =  tool name: "Maven-3.6.3", type: "maven"
      def mavenCMD = "${mavenHome}/bin/mvn"
      sh "${mavenCMD} clean package"
    } 
    
    //Building Image using docker
    stage("Build Dokcer Image") {
         sh "docker build -t shareefmj/spring-boot-mongo:${(BUILD_NUMBER)} ."
    }
    
    //Pushing that Build Image to Docker-Hub
    stage("Docker Push"){
        withCredentials([string(credentialsId: 'Docker_Hub_Pwd', variable: 'Docker_Hub_Pwd')]) {
          sh "docker login -u shareefmj -p ${Docker_Hub_Pwd}"
        }
        sh "docker push -t shareefmj/spring-boot-mongo:${(BUILD_NUMBER)}"
        }
	
    //Updating Image Tag 
    stage("Update Image tag in compose"){
        sh "sed -i s/VERSION/BUILD_NUMBER docker-compose.yml "
    }
    
    // Remove local image in Jenkins Server
    stage("Remove Local Image"){
        sh "docker rmi -f shareefmj/spring-boot-mongo"
    }
    
    stage("Deploy to docker swarm cluster"){
        sshagent(['Docker_Swarm_Manager_Dev']) {
		    sh 'scp -o StrictHostKeyChecking=no  docker-compose.yml ubuntu@172.31.3.24:'
                    sh 'ssh -o StrictHostKeyChecking=no ubuntu@172.31.3.24 docker stack deploy --prune --compose-file docker-compose.yml springboot'
        }
    }
}//NodeClosing
}//PipelineClosing
