node{

    //Cloinig the repository and Git checkout
    stage("Git CheckOut"){
        git url: 'https://github.com/Shareefmj/spring-boot-mongo-docker.git',branch: 'master'
    }
    
    //Definig the maven home path and version
    stage(" Maven Clean Package"){
      def mavenHome =  tool name: "Maven-3.6.3", type: "maven"
      sh "${mavenHome}/bin/mvn clean package"
    } 
    
    //Building Image using docker
    stage("Build Dokcer Image") {
         sh "docker build -t shareefmj/spring-boot-mongo:${(BUILD_NUMBER)} ."
    }
    
    //Pushing that Build Image to Docker-Hub
    stage("Docker Push"){
        withCredentials([string(credentialsId: 'fdb215c0-4700-42e1-925b-a2b38e870cf3', variable: 'Docker_Hub_Pwd')]) {
        sh "docker login -u shareefmj -p ${Docker_Hub_Pwd}" 
        }
        sh "docker push shareefmj/spring-boot-mongo:${(BUILD_NUMBER)}"
        }
	
    //Update Image tag in Docker compose-file
    stage("Updating Image Tag"){
        sh "sed -i 's/VERSION/${BUILD_NUMBER}/' docker-compose.yml "
    }
    
    // Remove local image in Jenkins Server
    stage("Remove Local Image"){
        sh "docker rmi -f shareefmj/spring-boot-mongo"
    }
    
    //Lets Create container using docker-compose file to docker_Jenkins_server
    stage("Creating container on docker_Jenkins_server"){
        sshagent(['070c6c87-7b38-4f27-86ae-61da6e566dd7']) {
            sh "scp -o StrictHostKeyChecking=no  docker-compose.yml  ubuntu@172.31.3.24:"
            sh "ssh -o StrictHostKeyChecking=no  ubuntu@172.31.3.24  docker-compose up -d"
    
        }
    }
}//NodeClosing
